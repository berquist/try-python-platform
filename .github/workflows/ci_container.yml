---
name: try Python platform module in Linux container

# yamllint disable-line rule:truthy
on:
  pull_request:
  push:

jobs:
  run-python-platform:
    name: ${{ matrix.image }}
    # name: image:${{ matrix.image }} / version:${{ matrix.python-version }}
    runs-on: ubuntu-24.04
    env:
      JOB_NAME_DIRTY: ${{ matrix.image }}
    container:
      image: ${{ matrix.image }}
    strategy:
      matrix:
        image:
          - almalinux:8.10-20240528
          - almalinux:9.4-20240530
          - archlinux:base-devel-20240101.0.204074
          - debian:bookworm-20240513
          - debian:sid-20240513
          - redhat/ubi8:8.10-901.1717584420
          - redhat/ubi9:9.4-947.1717074712
          - rockylinux:8.9.20231119
          - rockylinux:9.3.20231119
        # python-version:
        #   - 3.7
        #   - 3.8
        #   - 3.9
        #   - '3.10'
        #   - 3.11
        #   - 3.12
      fail-fast: false
    steps:
      - name: set JOB_NAME (Unix)
        run: |
          set -x
          # echo "JOB_NAME=${${{ env.JOB_NAME_DIRTY }}//:/_}" >> "${GITHUB_ENV}"
          JOB_NAME_DIRTY="${{ env.JOB_NAME_DIRTY }}"
          JOB_NAME="${JOB_NAME_DIRTY//[\/:]/_}"
          echo "JOB_NAME=${JOB_NAME}" >> "${GITHUB_ENV}"
        shell: 'bash -e {0}'
        if: ${{ runner.os != 'Windows' }}
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: install system-level dependencies
        run: |
          bash ./install_system_level_dependencies.sh
        if: ${{ runner.os != 'Windows' }}
      # TODO use to compile from source?
      # - uses: actions/setup-python@v5
      #   with:
      #     python-version: ${{ matrix.python-version }}
      - name: set JSON output file location (Windows)
        run: |
          Add-Content -Path "${env:GITHUB_ENV}" -Value "TRY_PLATFORM_OUTPUTFILE=${{ env.JOB_NAME }}.json"
        shell: pwsh
        if: ${{ runner.os == 'Windows' }}
      - name: set JSON output file location (Unix)
        run: |
          echo "TRY_PLATFORM_OUTPUTFILE=${{ env.JOB_NAME }}.json" >> "${GITHUB_ENV}"
        if: ${{ runner.os != 'Windows' }}
      - name: try calling platform code (Windows)
        run: |
          python try_platform.py
        if: ${{ runner.os == 'Windows' }}
      - name: try calling platform code (Unix)
        run: |
          bash ./execute_python.sh
        if: ${{ runner.os != 'Windows' }}
      - name: save JSON output
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4
        with:
          name: ${{ env.JOB_NAME }}
          path: '*.json'
